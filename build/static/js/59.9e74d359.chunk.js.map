{"version":3,"sources":["app/user-pages/PortFolio.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","PortFolio","username","useSelector","_useState","useState","_useState2","_slicedToArray","portfolio","setPortfolio","_useState3","_useState4","total","setTotal","useEffect","fetchPlacedOrders","updatePortfolio","socket","WebSocket","onopen","console","log","send","parseData","data","JSON","parse","concat","onmessage","_ref","_asyncToGenerator","_callee","event","_parsedArray$","_parsedArray$2","parsedArray","_context","forwardWeekPL","_x","apply","arguments","onclose","close","_ref2","_callee2","_context2","UPDATE_PORTFOLIO","_ref3","_callee3","_context3","handleClick","_ref4","_callee4","e","_context4","preventDefault","target","_x2","React","createElement","className","aria-label","href","onClick","aria-current","map","index","_entry$exchange","_entry$symbol$split$","_entry$order_type","_entry$quantity","_entry$averagePrice","_entry$currentPrice","dateObj","Date","expiry","day","getDate","month","toLocaleString","toUpperCase","year","getFullYear","formattedDate","exchange","symbol","split","order_type","quantity","averagePrice","currentPrice","profitloss","profitlosswithbrkg","order_id","Fragment","colSpan","style","padding","toFixed"],"mappings":"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","file":"static/js/59.9e74d359.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { GETALL_PLACED_ORDER_USER, GET_PORTFOLIO_SINGLEUSER, SQUARE_OFF_FUNCTION, UPDATE_PORTFOLIO } from '../../utils/API';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './SQTable.css';\r\n\r\n\r\nexport const PortFolio = () => {\r\n\r\n  const { username } = useSelector((state) => {\r\n    if (!state) {\r\n      return {\r\n        username: null\r\n      };\r\n    }\r\n    return {\r\n      username: state.username\r\n    };\r\n  });\r\n\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchPlacedOrders();\r\n    updatePortfolio();\r\n  }, []);\r\n  \r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket(\"ws://52.66.105.29:8020\");\r\n\r\n    socket.onopen = () => {\r\n      console.log(\"Balance Connection Established\");\r\n      socket.send(username);\r\n    };\r\n\r\n    const parseData = (data) => {\r\n      try {\r\n        const parsedData = JSON.parse(`[${data}]`);\r\n        return parsedData;\r\n      } catch (error) {\r\n        console.error(\"Error parsing data:\", error);\r\n        return [];\r\n      }\r\n    };\r\n\r\n    socket.onmessage = async (event) => {\r\n      const data = event.data;\r\n      const parsedArray = parseData(data);\r\n      setPortfolio(parsedArray[0]?.portfolio);\r\n      setTotal(parsedArray[0]?.forwardWeekPL);\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log(\"Balance Connection Closed\");\r\n    };\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, [username]);\r\n\r\n  const updatePortfolio = async () => {\r\n    const res = await UPDATE_PORTFOLIO();\r\n  }\r\n\r\n  const fetchPlacedOrders = async () => {\r\n  //   const res = await GETALL_PLACED_ORDER_USER(username);\r\n\r\n  //   if (res.length !== 0) {\r\n  //     const result = await GET_PORTFOLIO_SINGLEUSER(username, res);\r\n  //     // setTotal(result.nettotal);\r\n  //   }\r\n\r\n  //   // const result = await GET_PORTFOLIO_SINGLEUSER(username, res);\r\n  //   // setTotal(result.nettotal);\r\n  }\r\n\r\n  const handleClick = async (e) => {\r\n\r\n    e.preventDefault();\r\n    console.log(e.target.value)\r\n\r\n    // const res = await SQUARE_OFF_FUNCTION(username, e.target.value);\r\n    // toast.info(res.message, {\r\n    //   position: toast.POSITION.TOP_RIGHT,\r\n    //   autoClose: 3000,\r\n    //   hideProgressBar: false,\r\n    //   pauseOnHover: true,\r\n    // });\r\n\r\n    fetchPlacedOrders();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\"> PortFolio </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>PortFolio</a></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Your Opened Positions</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">PortFolio ({portfolio?.length})</h4>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n\r\n                      <th> Exchange </th>\r\n                      <th> Script | Expiry </th>\r\n                      <th> Order Type</th>\r\n                      <th> Quantity </th>\r\n                      <th> Avarage Price </th>\r\n                      <th> Current Price </th>\r\n                      <th> Profit / Loss</th>\r\n                      <th> P/L with Brkg  </th>\r\n                      <th> Square Off </th>\r\n\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      portfolio && portfolio.length > 0 ? portfolio.map((entry, index) => {\r\n\r\n                        const dateObj = new Date(entry.expiry);\r\n                        const day = dateObj.getDate();\r\n                        const month = dateObj.toLocaleString('default', { month: 'short' }).toUpperCase();\r\n                        const year = dateObj.getFullYear();\r\n                        const formattedDate = `${day}${month}${year}`;\r\n\r\n                        return (\r\n                          <tr>\r\n                            <td> {entry.exchange ?? \"XXXX\"} </td>\r\n                            <td> {entry.symbol.split(\"-\")[0] ?? \"-\"} | {formattedDate ?? \"-\"} </td>\r\n                            <td> {entry.order_type ?? \"TYPE\"} </td>\r\n                            <td> {entry.quantity ?? \"000\"} </td>\r\n                            <td> {entry.averagePrice ?? \"000.0\"} </td>\r\n                            <td> {entry.currentPrice ?? \"000.0\"} </td>\r\n\r\n                            <td> {entry.profitloss ? entry.profitloss : \"000.0\"} </td>\r\n                            <td> {entry.profitlosswithbrkg ? entry.profitlosswithbrkg : \"000.0\"} </td>\r\n                            <td> <button onClick={handleClick} value={entry.order_id} className='btn btn-primary'> S/O </button> </td>\r\n                          </tr>\r\n                        )\r\n                      }) : (\r\n                        <>\r\n                          <tr>\r\n                            <td colSpan=\"10\"> No data Found </td>\r\n                          </tr>\r\n                        </>\r\n                      )\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 grid-margin stretch-card\">\r\n          <div className=\"card btn btn-gradient-dark\">\r\n            <div style={{ padding: \"1rem\" }} className=\"card-body text-center\">\r\n              <span > Total </span>\r\n              <h4 >{total?.toFixed(2)}</h4>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default PortFolio\r\n"],"sourceRoot":""}